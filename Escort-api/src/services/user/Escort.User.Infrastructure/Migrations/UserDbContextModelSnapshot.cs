// <auto-generated />
using Escort.User.Infrastructure.DBcontext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Escort.User.Infrastructure.Migrations
{
    [DbContext(typeof(UserDbContext))]
    partial class UserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.2.24474.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Escort.User.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Escort.User.Domain.Models.UserContactDetails", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserContactDetails");
                });

            modelBuilder.Entity("Escort.User.Domain.Models.UserVerificationDetails", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Abn")
                        .HasColumnType("text");

                    b.Property<string>("DriversLicenseNumber")
                        .HasColumnType("text");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserVerificationDetails");
                });

            modelBuilder.Entity("Escort.User.Domain.Models.UserContactDetails", b =>
                {
                    b.HasOne("Escort.User.Domain.Models.User", null)
                        .WithOne("UserContactDetails")
                        .HasForeignKey("Escort.User.Domain.Models.UserContactDetails", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Escort.User.Domain.Models.UserVerificationDetails", b =>
                {
                    b.HasOne("Escort.User.Domain.Models.User", null)
                        .WithOne("UserVerificationDetails")
                        .HasForeignKey("Escort.User.Domain.Models.UserVerificationDetails", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Escort.User.Domain.Models.User", b =>
                {
                    b.Navigation("UserContactDetails")
                        .IsRequired();

                    b.Navigation("UserVerificationDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
